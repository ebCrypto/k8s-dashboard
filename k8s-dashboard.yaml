apiVersion: apps/v1
kind: Deployment
metadata:
  name: k8s-dash-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: k8s-dash-api
  template:
    metadata:
      labels:
        app: k8s-dash-api
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
      - name: k8s-dash-api
        image: localhost:5000/k8s-dashboard-api:0.2.8
        ports:
        - containerPort: 80
          name: k8s-dash-api
---
apiVersion: v1
kind: Service
metadata:
  name: k8s-dash-api
spec:
  type: LoadBalancer
  ports:
  - name: http
    targetPort: 80
    port: 5183
  selector:
    app: k8s-dash-api
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: k8s-dash-client
spec:
  replicas: 1
  selector:
    matchLabels:
      app: k8s-dash-client
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 5 
  template:
    metadata:
      labels:
        app: k8s-dash-client
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
      - name: k8s-dash-client
        image: localhost:5000/k8s-dashboard-client:0.0.5
        ports:
        - containerPort: 3000
        resources:
          requests:
            cpu: 250m
          limits:
            cpu: 500m
---
apiVersion: v1
kind: Service
metadata:
  name: k8s-dash-client
spec:
  type: LoadBalancer
  ports:
  - name: http
    targetPort: 80
    port: 3000
  selector:
    app: k8s-dash-client
